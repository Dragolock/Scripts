-- PAS-HUB using Wizard Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
-- Main Window and Sections
local Window = Library:NewWindow("PAS - HUB")
local MainGame = Window:NewSection("Main Game")
local Bosses = Window:NewSection("Bosses")
local Worlds = Window:NewSection("Worlds/Secret Worlds")
local PvP = Window:NewSection("PvP Stuff")
-- Underworld Event Window/Section
local EventWindow = Library:NewWindow("Underworld Event")
local EventSection = EventWindow:NewSection("Event")

--------------------
-- MAIN GAME
--------------------

local autoClickEnabled = false
MainGame:CreateToggle("Auto Click", function(state)
    autoClickEnabled = state
    if state then
        spawn(function()
            while autoClickEnabled do
                game.ReplicatedStorage.Remotes.Events.ClickEvent:FireServer()
                wait()
            end
        end)
    end
end)

local hatchNearestEnabled = false
local eggList = {
    "W1E1","W2E1","W3E1","W4E1","W5E1","W6E1","W7E1","W8E1","W9E1","W10E1",
    "W11E1","W12E1","W13E1","W14E1","W15E1","W16E1","W17E1","W18E1","W19E1","W20E1",
    "W21E1","W22E1","W23E1","W24E1","W25E1","W26E1","W27E1","W28E1","W29E1","W30E1",
    "W31E1","W32E1","W33E1","W34E1","W35E1","Common Egg"
}
MainGame:CreateToggle("Hatch Nearest", function(state)
    hatchNearestEnabled = state
    if state then
        spawn(function()
            while hatchNearestEnabled do
                for _, egg in ipairs(eggList) do
                    game.ReplicatedStorage.GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(egg,"Buy1")
                end
                wait(0.3)
            end
        end)
    end
end)

local autoSpinWheelEnabled = false
MainGame:CreateToggle("Auto Spin Wheel", function(state)
    autoSpinWheelEnabled = state
    if state then
        spawn(function()
            while autoSpinWheelEnabled do
                game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent.SpaceEggEvent:FireServer()
                wait(20)
            end
        end)
    end
end)

MainGame:CreateButton("Complete Quests", function()
    local remotes = game:GetService("ReplicatedStorage").Remotes.Events
    remotes.RemoveC:FireServer(1)
    wait()
    remotes.WorldWheelEvent:FireServer("5")
    remotes.OnStandartShopRequest:FireServer("Buy", 2, 3)
    remotes.OnStandartShopRequest:FireServer("Buy", 2, 1)
    wait()
    remotes.PortalC:FireServer("1", true)
    wait(1)
    remotes.PortalC:FireServer("2", true)
    wait(1)
    remotes.PortalC:FireServer("1", true)
    wait(1)
    remotes.PortalC:FireServer("2", true)
    wait(1)
    remotes.PortalC:FireServer("1", true)
    wait(1)
    remotes.PortalC:FireServer("2", true)
    wait(2)
    for i = 1, 10 do
        remotes.WinEvent:FireServer("5")
        wait(2)
    end
    wait(2)
    for i = 1, 25 do
        remotes.WinBossEvent:FireServer("Boss1")
        wait(0.1)
    end
    remotes.RemoveC:FireServer(0)
    wait(120)
    local dailyArgs = {
        {"Daily", "UseOnSideSystem"},
        {"Daily", "Defeat10Enemies"},
        {"Daily", "Pull10Swords"},
        {"Daily", "Click1000Times"},
        {"Daily", "Win20MillionPower"},
        {"Daily", "GoTo5Worlds"},
        {"Daily", "PlayFor60Minutes"},
        {"Daily", "BuyItemsAtStore"},
        {"Daily", "Complete10Quests"},
    }
    for _, args in ipairs(dailyArgs) do
        remotes.ClaimQuest:FireServer(unpack(args))
        wait(0.5)
    end
end)

MainGame:CreateButton("Antiafk & Antilag", function()
    game:GetService('Players').LocalPlayer.Idled:Connect(function()
        game:GetService('VirtualUser'):CaptureController()
        game:GetService('VirtualUser'):ClickButton2(Vector2.new())
    end)
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize, t.WaterWaveSpeed, t.WaterReflectance, t.WaterTransparency = 0,0,0,0
    l.GlobalShadows, l.FogEnd, l.Brightness = false, 9e9, 0
    settings().Rendering.QualityLevel = "Level01"
    for i, v in pairs(g:GetDescendants()) do
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material, v.Reflectance = "Plastic", 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure, v.BlastRadius = 1,1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material, v.Reflectance, v.TextureID = "Plastic", 0, ""
        end
    end
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
end)

--------------------
-- BOSSES
--------------------

local bossList = {"The King", "Dravenar", "Glacius", "Anubis", "Bossbot", "Lazyfish", "Yokai", "Vort3x", "Underlord", "The Conquerer"}
local bossMap = {
    ["The King"]="Boss1",["Dravenar"]="Boss2",["Glacius"]="Boss3",["Anubis"]="Boss4",
    ["Bossbot"]="Boss5",["Lazyfish"]="Boss6",["Yokai"]="Boss7",["Vort3x"]="Boss8",
    ["Underlord"]="Boss9",["The Conquerer"]="Boss10",
}
_G.SelectedBoss = bossList[1]
Bosses:CreateDropdown("Select Boss", bossList, 1, function(boss)
    _G.SelectedBoss = boss
end)

local generateCrystalsEnabled = false
Bosses:CreateToggle("Generate Crystals", function(state)
    generateCrystalsEnabled = state
    local r = game.ReplicatedStorage.Remotes.Events
    if state then
        r.RemoveC:FireServer(1)
        spawn(function()
            while generateCrystalsEnabled do
                for i=1,20 do
                    r.WinMegaBossEvent:FireServer("Dragon6", "Chaos")
                end
                wait()
            end
            r.RemoveC:FireServer(0)
        end)
    else
        r.RemoveC:FireServer(0)
    end
end)

local spinCrystalWheelsEnabled = false
Bosses:CreateToggle("Spin Crystal Wheels", function(state)
    spinCrystalWheelsEnabled = state
    if state then
        spawn(function()
            while spinCrystalWheelsEnabled do
                local r = game.ReplicatedStorage.Remotes.Events
                r.WorldWheelEvent:FireServer("5")
                r.SpinWheelSecret:FireServer("-8", "563")
                r.WorldWheelEvent:FireServer("6")
                wait(1)
            end
        end)
    end
end)

local killTitleBossEnabled = false
Bosses:CreateToggle("Kill Title Boss", function(state)
    killTitleBossEnabled = state
    local r = game.ReplicatedStorage.Remotes.Events
    if state then
        r.RemoveC:FireServer(1)
        wait(0.1)
        local chosen = bossMap[_G.SelectedBoss] or "Boss1"
        spawn(function()
            while killTitleBossEnabled do
                r.WinBossEvent:FireServer(chosen)
                wait(0.2)
            end
            r.RemoveC:FireServer(0)
        end)
    else
        r.RemoveC:FireServer(0)
    end
end)

--------------------
-- WORLDS / SECRET WORLDS
--------------------

local worldOptions = {
    {name="Castle",args={"2",true}}, {name="Volcano Cave",args={"1",true}},
    {name="Glacier Peaks",args={"3",true}}, {name="Desert Island",args={"5",true}},
    {name="The Lab",args={"7",true}}, {name="Ocean",args={"9",true}},
    {name="Temple",args={"11",true}}, {name="Arcade",args={"13",true}},
    {name="Underworld",args={"15",true}}, {name="Darkstar",args={"17",true}},
    {name="Nyxra Place",args={"-6",false}}, {name="Anubis",args={"-8",false}},
    {name="Viridian",args={"-14",false}}, {name="Ultra Prime",args={"-10",false}},
}
local worldNames = {}
for _, opt in ipairs(worldOptions) do table.insert(worldNames, opt.name) end
_G.WorldTarget = worldNames[1]
Worlds:CreateDropdown("Select World", worldNames, 1, function(selected)
    _G.WorldTarget = selected
end)
Worlds:CreateButton("TP to World", function()
    for _, opt in ipairs(worldOptions) do
        if opt.name == (_G.WorldTarget or worldNames[1]) then
            game.ReplicatedStorage.Remotes.Events.PortalC:FireServer(unpack(opt.args))
            break
        end
    end
end)
local secretBossOptions = {
    {name="Nyxra",dragon="Dragon-3"},
    {name="RaZar",dragon="Dragon-4"},
    {name="Viridian",dragon="Dragon-5"},
    {name="Ultra Prime",dragon="Dragon-8"},
}
local secretBossNames = {}
for _, b in ipairs(secretBossOptions) do table.insert(secretBossNames, b.name) end
_G.SecretBossTarget = secretBossNames[1]
Worlds:CreateDropdown("Select Which Boss", secretBossNames, 1, function(selected)
    _G.SecretBossTarget = selected
end)
local difficultyOptions = {"Normal","Hard","Chaos"}
_G.SecretBossDifficulty = difficultyOptions[1]
Worlds:CreateDropdown("Difficulty", difficultyOptions, 1, function(selected)
    _G.SecretBossDifficulty = selected
end)

local killSecretBossEnabled = false
Worlds:CreateToggle("Kill Secret Boss", function(state)
    killSecretBossEnabled = state
    local remotes = game.ReplicatedStorage.Remotes.Events
    if state then
        local boss=nil
        for _, b in ipairs(secretBossOptions) do
            if (_G.SecretBossTarget or secretBossNames[1]) == b.name then boss=b.dragon break end
        end
        local difficulty = _G.SecretBossDifficulty or difficultyOptions[1]
        if boss and difficulty then
            remotes.RemoveC:FireServer(1)
            wait(0.2)
            spawn(function()
                while killSecretBossEnabled do
                    remotes.WinMegaBossEvent:FireServer(boss,difficulty)
                    wait(0.2)
                end
                remotes.RemoveC:FireServer(0)
            end)
        end
    else remotes.RemoveC:FireServer(0) end
end)

--------------------
-- PVP Stuff
--------------------

local function getPlayerNames()
    local t = {}
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        table.insert(t, player.Name)
    end
    return t
end
local playerNames = getPlayerNames()
_G.PvPTarget = playerNames[1] or ""
PvP:CreateDropdown("Select PvP Target", playerNames, 1, function(selected)
    _G.PvPTarget = selected
end)

local buyPotionsEnabled = false
PvP:CreateToggle("Buy Potions", function(state)
    buyPotionsEnabled = state
    if state then
        spawn(function()
            while buyPotionsEnabled do
                local remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Events")
                remotes.HalloweenShopEvent:FireServer("WinsPotions")
                remotes.HalloweenShopEvent:FireServer("ShinyPotions")
                wait()
            end
        end)
    end
end)

local autoPvPEnabled = false
PvP:CreateToggle("Auto PvP", function(state)
    autoPvPEnabled = state
    if state then
        spawn(function()
            while autoPvPEnabled do
                local r = game.ReplicatedStorage.Remotes.Events
                local targetName = _G.PvPTarget
                if targetName and targetName ~= "" then
                    r.WinEvent_PVP:FireServer(targetName, true, true)
                end
                wait(0.7)
            end
        end)
    end
end)

PvP:CreateButton("PvP Test (x2 Instant)", function()
    local r = game.ReplicatedStorage.Remotes.Events
    local targetName = _G.PvPTarget
    if targetName and targetName ~= "" then
        for i = 1, 2 do
            r.WinEvent_PVP:FireServer(targetName, true, true)
        end
    end
end)

PvP:CreateButton("Refresh Players", function()
    local names = getPlayerNames()
    _G.PvPTarget = names[1] or ""
end)

--------------------
-- UNDERWORLD EVENT
--------------------

local attackAuraEnabled = false
EventSection:CreateToggle("Attack Aura.", function(state)
    attackAuraEnabled = state
    if state then
        spawn(function()
            while attackAuraEnabled do
                game:GetService("ReplicatedStorage")
                    .Remotes.Events.OnAttackMob:FireServer()
                wait()
            end
        end)
    end
end)

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Noclipping = nil
local remoteEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Events"):WaitForChild("ClaimGiftFromUnderworld")
local buyGiftsEnabled = false
local function enableNoclip()
    if Noclipping then Noclipping:Disconnect() end
    Noclipping = RunService.Stepped:Connect(function()
        if player.Character then
            for _, child in pairs(player.Character:GetDescendants()) do
                if child:IsA("BasePart") and child.CanCollide then
                    child.CanCollide = false
                end
            end
            remoteEvent:FireServer()
        end
    end)
end
EventSection:CreateToggle("Buy Gifts", function(state)
    buyGiftsEnabled = state
    if state then
        enableNoclip()
    else
        if Noclipping then
            Noclipping:Disconnect()
            Noclipping = nil
        end
    end
end)

local teleporting = false
local function teleportLoop()
    teleporting = true
    local lp = game.Players.LocalPlayer
    local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    spawn(function()
        while teleporting and hrp do
            hrp.CFrame = CFrame.new(hrp.Position + Vector3.new(0,0,0))
            hrp.AssemblyLinearVelocity, hrp.AssemblyAngularVelocity = Vector3.zero, Vector3.zero
            wait(0.3)
        end
    end)
end
local function teleportCommander()
    teleporting = true
    local lp = game.Players.LocalPlayer
    local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    spawn(function()
        while teleporting and hrp do
            hrp.CFrame = CFrame.new(4758,538,-1768)
            hrp.AssemblyLinearVelocity, hrp.AssemblyAngularVelocity = Vector3.zero, Vector3.zero
            wait()
        end
    end)
end
local function teleportHollowKing()
    teleporting = true
    local lp = game.Players.LocalPlayer
    local hrp = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    spawn(function()
        while teleporting and hrp do
            hrp.CFrame = CFrame.new(4508, 551, -1528)
            hrp.AssemblyLinearVelocity, hrp.AssemblyAngularVelocity = Vector3.zero, Vector3.zero
            wait()
        end
    end)
end
local eventTargets = {"Skeletons", "Commander Skeleton", "Hollow King"}
_G.TeleportTarget = eventTargets[1]
EventSection:CreateDropdown("Select Target", eventTargets, 1, function(target)
    _G.TeleportTarget = target
end)

local enableTeleportEnabled = false
EventSection:CreateToggle("Enable Teleport", function(state)
    enableTeleportEnabled = state
    teleporting = false
    if state then
        teleporting = true
        if _G.TeleportTarget == "Skeletons" then
            teleportLoop()
        elseif _G.TeleportTarget == "Commander Skeleton" then
            teleportCommander()
        elseif _G.TeleportTarget == "Hollow King" then
            teleportHollowKing()
        end
    else
        teleporting = false
    end
end)

EventSection:CreateButton("Set WalkSpeed to 70", function()
    local plr = game.Players.LocalPlayer
    local char = plr.Character or plr.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.WalkSpeed = 70
end)
EventSection:CreateButton("Buy HP Upgrade", function()
    local args = {"Health"}
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
        :WaitForChild("Events")
        :WaitForChild("OnUpgradedRequests")
        :FireServer(unpack(args))
end)
